name: Build and Deploy Docker Container

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/szymmat/10xVibeTravels
          tags: |
            type=sha,prefix=
            type=raw,value=latest

  deploy-to-vm:
    name: Deploy to VM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy code to VM via rsync
        uses: easingthemes/ssh-deploy@v5.0.0 # Check for the latest version
        with:
          SSH_PRIVATE_KEY: ${{ secrets.DO_VM_SSH_KEY }}
          ARGS: "-avz --delete --exclude=.env --exclude=appsettings.json" # rsync arguments: archive, verbose, compress, delete extraneous files, but exclude .env and appsettings.json
          SOURCE: "./" # Source directory from checkout (root of your repo)
          REMOTE_HOST: ${{ secrets.DO_VM_HOST }}
          REMOTE_USER: ${{ secrets.DO_VM_USER }}
          TARGET: ${{ secrets.DO_VM_PROJECT_PATH }} # Target directory on your VM

      - name: SSH into VM and run deployment commands
        uses: appleboy/ssh-action@v1.0.3 # Check for the latest version
        with:
          host: ${{ secrets.DO_VM_HOST }}
          username: ${{ secrets.DO_VM_USER }}
          key: ${{ secrets.DO_VM_SSH_KEY }}
          script: |
            set -e # Exit immediately if a command exits with a non-zero status
            echo "Deploying to ${{ secrets.DO_VM_PROJECT_PATH }} on ${{ secrets.DO_VM_HOST }}"
            cd ${{ secrets.DO_VM_PROJECT_PATH }}
            echo "Changed directory to $(pwd)"

            echo "Listing files in project directory after rsync:"
            ls -la

            echo "Stopping existing Docker services (if any)..."
            # Use 'docker-compose' if you have an older version
            docker compose down || true # Allow to fail if no services are running (e.g., first deployment)

            echo "Building and starting Docker services..."
            # Use 'docker-compose' if you have an older version
            docker compose up --build -d # -d for detached mode

            echo "Deployment successful."
            echo "Current Docker containers running:"
            docker ps
